{"version":3,"file":"Query.js","sources":["../src/Query.ts"],"sourcesContent":["import { QueryHelpers, SortOptions } from '@colyseus/core';\nimport { RoomData } from './RoomData';\n\nexport class Query<T> implements QueryHelpers<T> {\n  private readonly rooms: Promise<T[]>;\n  private conditions: any;\n  protected order: Map<string, 1 | -1> = new Map();\n\n  constructor(rooms: Promise<T[]>, conditions) {\n    this.conditions = conditions;\n    this.rooms = rooms;\n  }\n\n  public sort(options: SortOptions) {\n    this.order.clear();\n\n    const fields = Object.entries(options);\n\n    if (fields.length) {\n      for (const [field, direction] of fields) {\n        if (direction === 1 || direction === 'asc' || direction === 'ascending') {\n          this.order.set(field, 1);\n\n        } else {\n          this.order.set(field, -1);\n        }\n      }\n    }\n\n    return this;\n  }\n\n\n  public then(resolve, reject) {\n    return this.rooms.then(rooms => {\n\n      if (this.order.size) {\n        rooms.sort((room1, room2) => {\n          for (const [field, direction] of this.order) {\n            if (direction === 1) {\n              if (room1[field] > room2[field]) return 1;\n              if (room1[field] < room2[field]) return -1;\n            } else {\n              if (room1[field] > room2[field]) return -1;\n              if (room1[field] < room2[field]) return 1;\n            }\n          }\n        });\n      }\n\n      let conditions = Object.entries(this.conditions);\n      let withConditions = conditions.length > 0;\n\n      return resolve(rooms.find((room) => {\n        if (withConditions) {\n          for (let [field, value] of conditions) {\n            if (room[field] !== value) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n      }));\n    })\n  }\n}\n"],"names":[],"mappings":";;;;MAGa,KAAK;IACC,KAAK,CAAe;IAC7B,UAAU,CAAM;IACd,KAAK,GAAwB,IAAI,GAAG,EAAE,CAAC;IAEjD,YAAY,KAAmB,EAAE,UAAU;QACzC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;IAEM,IAAI,CAAC,OAAoB;QAC9B,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QAEnB,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAEvC,IAAI,MAAM,CAAC,MAAM,EAAE;YACjB,KAAK,MAAM,CAAC,KAAK,EAAE,SAAS,CAAC,IAAI,MAAM,EAAE;gBACvC,IAAI,SAAS,KAAK,CAAC,IAAI,SAAS,KAAK,KAAK,IAAI,SAAS,KAAK,WAAW,EAAE;oBACvE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;iBAE1B;qBAAM;oBACL,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;iBAC3B;aACF;SACF;QAED,OAAO,IAAI,CAAC;KACb;IAGM,IAAI,CAAC,OAAO,EAAE,MAAM;QACzB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK;YAE1B,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;gBACnB,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,KAAK;oBACtB,KAAK,MAAM,CAAC,KAAK,EAAE,SAAS,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;wBAC3C,IAAI,SAAS,KAAK,CAAC,EAAE;4BACnB,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;gCAAE,OAAO,CAAC,CAAC;4BAC1C,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;gCAAE,OAAO,CAAC,CAAC,CAAC;yBAC5C;6BAAM;4BACL,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;gCAAE,OAAO,CAAC,CAAC,CAAC;4BAC3C,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;gCAAE,OAAO,CAAC,CAAC;yBAC3C;qBACF;iBACF,CAAC,CAAC;aACJ;YAED,IAAI,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACjD,IAAI,cAAc,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;YAE3C,OAAO,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI;gBAC7B,IAAI,cAAc,EAAE;oBAClB,KAAK,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,UAAU,EAAE;wBACrC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,EAAE;4BACzB,OAAO,KAAK,CAAC;yBACd;qBACF;iBACF;gBAED,OAAO,IAAI,CAAC;aACb,CAAC,CAAC,CAAC;SACL,CAAC,CAAA;KACH;;;;;"}